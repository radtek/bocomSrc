# Makefile tmeplate

#============================================
# Part 1: util variable definition
AR = ar
CC = icc
CXX = icpc

#CC = gcc
#CXX = g++
LD = ld
RM = rm

#============================================
CarNum_BUILDDATE="\"\\\"`date +%Y-%m-%d\ %k:%M:%S`\\\"\""
CarNum_SVNURL="\"\\\"`svn info | grep URL`\\\"\""
CarNum_SVNNUM="\"\\\"`svn info | grep Revision`\\\"\""
#============================================
# Part 2: compile flags
ARFLAG = r
CFLAG = -O2 -xHost -fPIC -DLINUX 
CFLAG+= -DCarNum_BUILDDATE=$(CarNum_BUILDDATE)
CFLAG+= -DCarNum_SVNURL=$(CarNum_SVNURL)
CFLAG+= -DCarNum_SVNNUM=$(CarNum_SVNNUM)
CPPFLAG = -O2 -xHost -fPIC -DLINUX 
CPPFLAG += -DCarNum_BUILDDATE=$(CarNum_BUILDDATE)
CPPFLAG += -DCarNum_SVNURL=$(CarNum_SVNURL)
CPPFLAG += -DCarNum_SVNNUM=$(CarNum_SVNNUM)
RMFLAG = -rf

#============================================
# Part 3: include files directory
#         library files directory
INCLUDE =-Iinclude -I/usr/include/opencv 
LIBRARY = 

#============================================
# Part 4: project staff

# source files
CSRC = $(wildcard source/*.c) # ./*.c
CPPSRC = $(wildcard source/*.cpp) # ./*.cpp
SRC = $(CSRC) $(CPPSRC)

# object files
COBJ = $(patsubst %.c, %.o, $(CSRC))
CPPOBJ = $(patsubst %.cpp, %.o, $(CPPSRC))
OBJ = $(COBJ) $(CPPOBJ)

# target
TARGET = ./libdetect.so

#============================================
# Part 5: compile process


$(TARGET): $(OBJ)
	$(AR) r $@ $(OBJ);
	chmod 777 $(TARGET);
	chmod -R 777 $(OBJ);
	echo "$(CarNum_BUILDDATE)";
	echo "$(CarNum_SVNURL)";
	echo "$(CarNum_SVNNUM)";


$(COBJ): %.o: %.c
	$(CC) $(CFLAG) -c $< -o $@ $(INCLUDE) $(LIBRARY)

$(CPPOBJ): %.o: %.cpp
	$(CXX) $(CPPFLAG) -c $< -o $@ $(INCLUDE) $(LIBRARY)


#============================================
# Part 6: clean
clean:
	$(RM) $(RMFLAG) $(OBJ) $(TARGET)

cleanall:
	$(RM) $(RMFLAG) $(OBJ) $(TARGET) $(SRC)
